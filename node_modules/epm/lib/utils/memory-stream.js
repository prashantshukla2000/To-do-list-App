/*!
 * This file is part of EPM.
 *
 * please see the LICENSE
 */

'use strict';

var stream = require('stream')
  , util = require('util')
  , Writable = stream.Writable || require('readable-stream').Writable
  ;

var MemoryStream = module.exports = function(options) {
  if (!(this instanceof MemoryStream)) {
    return new MemoryStream(key, options);
  }
  Writable.call(this, options); // init super
  this.buffer = new Buffer('');
}

util.inherits(MemoryStream, Writable);

MemoryStream.prototype._write = function (chunk, enc, cb) {
  // our memory store stores things in buffers
  var buffer = (Buffer.isBuffer(chunk)) ?
    chunk :  // already is Buffer use it
    new Buffer(chunk, enc);  // string, convert

  // concat to the buffer already there
  this.buffer = Buffer.concat([this.buffer, buffer]);
  cb();
};